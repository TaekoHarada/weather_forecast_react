{"ast":null,"code":"var _jsxFileName = \"/Users/taekoharada/Documents/myProject/weather_forcast_react/src/components/SearchForecast.jsx\",\n  _s = $RefreshSig$();\n// Component for a search form\n// which search 3 days weather forecast by a location entered in the text box\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function SearchForecast(props) {\n  _s();\n  const APIID = \"431416ee6ac11ff008eca9e762cf30d3\"; // Access key for OpenWeather\n  const DEFAULT_CITY = \"Calgary\"; //later it will be determine from user's location\n\n  const [city1, setCity1] = useState(DEFAULT_CITY);\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"Event !!\");\n    console.log(getCityData(location));\n  }\n\n  // get lat and lon from city name\n  async function getCityData(city_name) {\n    try {\n      const response = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${city_name}&limit=1&appid=${APIID}`);\n      // No error in response data\n      if (response.ok) {\n        // empty object\n        if (Object.hasOwn(response)) {\n          console.log(\"No data: \", Object.keys(response).length);\n          throw new Error(Object.hasOwn(response));\n        } else {\n          const city_data = await response.json();\n          return city_data;\n        }\n      } else {\n        throw new Error(response.status);\n      }\n    } catch (err) {\n      console.error(\"ERROR\", err);\n      return err;\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_form\",\n      children: \"SearchForecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"search_box\",\n      children: \"Location\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"search_box\",\n      type: \"text\",\n      value: location,\n      onChange: e => setLocation(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"search_btn\",\n      children: \"Go\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchForecast, \"6dttqEmPneT4/hlet1f+f8bIFTI=\");\n_c = SearchForecast;\nvar _c;\n$RefreshReg$(_c, \"SearchForecast\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchForecast","props","_s","APIID","DEFAULT_CITY","city1","setCity1","handleSubmit","e","preventDefault","console","log","getCityData","location","city_name","response","fetch","ok","Object","hasOwn","keys","length","Error","city_data","json","status","err","error","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","value","onChange","setLocation","target","_c","$RefreshReg$"],"sources":["/Users/taekoharada/Documents/myProject/weather_forcast_react/src/components/SearchForecast.jsx"],"sourcesContent":["// Component for a search form\n// which search 3 days weather forecast by a location entered in the text box\n\nimport React, { useState } from \"react\";\n\nexport function SearchForecast(props) {\n  const APIID = \"431416ee6ac11ff008eca9e762cf30d3\"; // Access key for OpenWeather\n  const DEFAULT_CITY = \"Calgary\"; //later it will be determine from user's location\n\n  const [city1, setCity1] = useState(DEFAULT_CITY);\n\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log(\"Event !!\");\n    console.log(getCityData(location));\n  }\n\n  // get lat and lon from city name\n  async function getCityData(city_name) {\n    try {\n      const response = await fetch(\n        `http://api.openweathermap.org/geo/1.0/direct?q=${city_name}&limit=1&appid=${APIID}`\n      );\n      // No error in response data\n      if (response.ok) {\n        // empty object\n        if (Object.hasOwn(response)) {\n          console.log(\"No data: \", Object.keys(response).length);\n          throw new Error(Object.hasOwn(response));\n        } else {\n          const city_data = await response.json();\n\n          return city_data;\n        }\n      } else {\n        throw new Error(response.status);\n      }\n    } catch (err) {\n      console.error(\"ERROR\", err);\n      return err;\n    }\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"search_form\">SearchForecast</div>\n      <label htmlFor=\"search_box\">Location</label>\n      <input\n        id=\"search_box\"\n        type=\"text\"\n        value={location}\n        onChange={(e) => setLocation(e.target.value)}\n      />\n      <button type=\"submit\" className=\"search_btn\">\n        Go\n      </button>\n    </form>\n  );\n}\n"],"mappings":";;AAAA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,OAAO,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAMC,KAAK,GAAG,kCAAkC,CAAC,CAAC;EAClD,MAAMC,YAAY,GAAG,SAAS,CAAC,CAAC;;EAEhC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAACO,YAAY,CAAC;EAGhD,SAASG,YAAYA,CAACC,CAAC,EAAE;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACvBD,OAAO,CAACC,GAAG,CAACC,WAAW,CAACC,QAAQ,CAAC,CAAC;EACpC;;EAEA;EACA,eAAeD,WAAWA,CAACE,SAAS,EAAE;IACpC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,kDAAiDF,SAAU,kBAAiBX,KAAM,EACrF,CAAC;MACD;MACA,IAAIY,QAAQ,CAACE,EAAE,EAAE;QACf;QACA,IAAIC,MAAM,CAACC,MAAM,CAACJ,QAAQ,CAAC,EAAE;UAC3BL,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEO,MAAM,CAACE,IAAI,CAACL,QAAQ,CAAC,CAACM,MAAM,CAAC;UACtD,MAAM,IAAIC,KAAK,CAACJ,MAAM,CAACC,MAAM,CAACJ,QAAQ,CAAC,CAAC;QAC1C,CAAC,MAAM;UACL,MAAMQ,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;UAEvC,OAAOD,SAAS;QAClB;MACF,CAAC,MAAM;QACL,MAAM,IAAID,KAAK,CAACP,QAAQ,CAACU,MAAM,CAAC;MAClC;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZhB,OAAO,CAACiB,KAAK,CAAC,OAAO,EAAED,GAAG,CAAC;MAC3B,OAAOA,GAAG;IACZ;EACF;EAEA,oBACE3B,OAAA;IAAM6B,QAAQ,EAAErB,YAAa;IAAAsB,QAAA,gBAC3B9B,OAAA;MAAK+B,SAAS,EAAC,aAAa;MAAAD,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjDnC,OAAA;MAAOoC,OAAO,EAAC,YAAY;MAAAN,QAAA,EAAC;IAAQ;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC,eAC5CnC,OAAA;MACEqC,EAAE,EAAC,YAAY;MACfC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEzB,QAAS;MAChB0B,QAAQ,EAAG/B,CAAC,IAAKgC,WAAW,CAAChC,CAAC,CAACiC,MAAM,CAACH,KAAK;IAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFnC,OAAA;MAAQsC,IAAI,EAAC,QAAQ;MAACP,SAAS,EAAC,YAAY;MAAAD,QAAA,EAAC;IAE7C;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX;AAAChC,EAAA,CAtDeF,cAAc;AAAA0C,EAAA,GAAd1C,cAAc;AAAA,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}