{"ast":null,"code":"var _jsxFileName = \"/Users/taekoharada/Documents/myProject/weather_forcast_react/src/components/Location.jsx\",\n  _s = $RefreshSig$();\n// A Location container including 'search form' and '3 days weather forecast'\n\nimport React, { useState, useEffect } from \"react\";\nimport { SearchForecast } from \"./SearchForecast\";\nimport { ThreeDaysForecast } from \"./ThreeDaysForecast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Location() {\n  _s();\n  const APIID = \"431416ee6ac11ff008eca9e762cf30d3\"; // Access key for OpenWeather\n  const DEFAULT_CITY = \"Calgary\"; //later it will be determine from user's location\n\n  const [city, setCity] = useState(DEFAULT_CITY);\n  const [weather, setWeather] = useState({});\n  const [loading, setLoading] = useState(true); //until fetching weather data, do not show weather information\n\n  // get lat and lon from city name\n  async function getCityData(city_name) {\n    try {\n      const response = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${city_name}&limit=1&appid=${APIID}`);\n      // No error in response data\n      if (response.ok) {\n        // empty object\n        if (Object.hasOwn(response)) {\n          console.log(\"No data: \", Object.keys(response).length);\n          throw new Error(Object.hasOwn(response));\n        } else {\n          const city_data = await response.json();\n          return city_data;\n        }\n      } else {\n        throw new Error(response.status);\n      }\n    } catch (err) {\n      console.error(\"ERROR\", err);\n      return err;\n    }\n  }\n\n  //get weather data from its position(lat, lon)\n  async function getWeatherData(lat, lon) {\n    console.log(lat, lon);\n    try {\n      const response = await fetch(`http://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&appid=${APIID}`);\n      // No error in response data\n      if (response.ok) {\n        const weather_data = await response.json();\n        return weather_data;\n      } else {\n        throw new Error(response.status);\n      }\n    } catch (err) {\n      console.error(\"ERROR\", err);\n      return err;\n    }\n  }\n  const onComponentMount = () => {\n    console.log(\"Component is mounted!\");\n    getCityData(city).then(city => {\n      return getWeatherData(city[0].lat, city[0].lon);\n    }).then(weather => setWeather(weather)).then(setLoading(false));\n  };\n  useEffect(() => {\n    // Call the function when the component first mounts\n    onComponentMount();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          color: \"red\"\n        },\n        children: city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchForecast, {\n        getCityData: getCityData,\n        city: city,\n        setCity: setCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  } else {}\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"red\"\n      },\n      children: city\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchForecast, {\n      getCityData: getCityData,\n      city: city,\n      setCity: setCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThreeDaysForecast, {\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(Location, \"qPgux2xoS1e5p9BN5iMrhI4ROzw=\");\n_c = Location;\nvar _c;\n$RefreshReg$(_c, \"Location\");","map":{"version":3,"names":["React","useState","useEffect","SearchForecast","ThreeDaysForecast","jsxDEV","_jsxDEV","Location","_s","APIID","DEFAULT_CITY","city","setCity","weather","setWeather","loading","setLoading","getCityData","city_name","response","fetch","ok","Object","hasOwn","console","log","keys","length","Error","city_data","json","status","err","error","getWeatherData","lat","lon","weather_data","onComponentMount","then","Fragment","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/taekoharada/Documents/myProject/weather_forcast_react/src/components/Location.jsx"],"sourcesContent":["// A Location container including 'search form' and '3 days weather forecast'\n\nimport React, { useState, useEffect } from \"react\";\nimport { SearchForecast } from \"./SearchForecast\";\nimport { ThreeDaysForecast } from \"./ThreeDaysForecast\";\n\nexport function Location() {\n  const APIID = \"431416ee6ac11ff008eca9e762cf30d3\"; // Access key for OpenWeather\n  const DEFAULT_CITY = \"Calgary\"; //later it will be determine from user's location\n\n  const [city, setCity] = useState(DEFAULT_CITY);\n  const [weather, setWeather] = useState({});\n  const [loading, setLoading] = useState(true); //until fetching weather data, do not show weather information\n\n  // get lat and lon from city name\n  async function getCityData(city_name) {\n    try {\n      const response = await fetch(\n        `http://api.openweathermap.org/geo/1.0/direct?q=${city_name}&limit=1&appid=${APIID}`\n      );\n      // No error in response data\n      if (response.ok) {\n        // empty object\n        if (Object.hasOwn(response)) {\n          console.log(\"No data: \", Object.keys(response).length);\n          throw new Error(Object.hasOwn(response));\n        } else {\n          const city_data = await response.json();\n\n          return city_data;\n        }\n      } else {\n        throw new Error(response.status);\n      }\n    } catch (err) {\n      console.error(\"ERROR\", err);\n      return err;\n    }\n  }\n\n  //get weather data from its position(lat, lon)\n  async function getWeatherData(lat, lon) {\n    console.log(lat, lon);\n    try {\n      const response = await fetch(\n        `http://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&appid=${APIID}`\n      );\n      // No error in response data\n      if (response.ok) {\n        const weather_data = await response.json();\n        return weather_data;\n      } else {\n        throw new Error(response.status);\n      }\n    } catch (err) {\n      console.error(\"ERROR\", err);\n      return err;\n    }\n  }\n\n  const onComponentMount = () => {\n    console.log(\"Component is mounted!\");\n\n    getCityData(city)\n      .then((city) => {\n        return getWeatherData(city[0].lat, city[0].lon);\n      })\n      .then((weather) => setWeather(weather))\n      .then(setLoading(false));\n  };\n\n  useEffect(() => {\n    // Call the function when the component first mounts\n    onComponentMount();\n  }, []);\n\n  if (loading) {\n    return (\n      <React.Fragment>\n        <h1 style={{ color: \"red\" }}>{city}</h1>\n        <SearchForecast\n          getCityData={getCityData}\n          city={city}\n          setCity={setCity}\n        />\n      </React.Fragment>\n    );\n  }else{}\n\n  return (\n    <React.Fragment>\n      <h1 style={{ color: \"red\" }}>{city}</h1>\n      <SearchForecast getCityData={getCityData} city={city} setCity={setCity} />\n      <ThreeDaysForecast weather={weather} />\n    </React.Fragment>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}