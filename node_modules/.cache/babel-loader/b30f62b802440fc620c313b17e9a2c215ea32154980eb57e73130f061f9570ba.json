{"ast":null,"code":"import\"./styles/styles.css\";import{useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const APIID=\"431416ee6ac11ff008eca9e762cf30d3\";const DEFAULT_CITY=\"Calgary\";//later it will be determine from user's location\nfunction App(){const[cityName,setCityName]=useState(DEFAULT_CITY);const[data,setData]=useState({date:\"2023-05-12\",weather_id:\"400\",main_weather:\"Clear\",highest_tmp:\"100\",lowest_tmp:\"20\"});async function renderWeather(){getCityData(cityName).then(city=>{return getWeatherData(city[0].lat,city[0].lon);}).then(weather_data=>{setData({date:getMonDay(new Date(weather_data.list[0].dt*1000)),weather_id:weather_data.list[0].weather[0].id,main_weather:weather_data.list[0].weather[0].main,highest_tmp:parseInt(weather_data.list[0].temp.max-273.15)+\"邃ソ",lowest_tmp:parseInt(weather_data.list[0].temp.min-273.15)+\"邃ソ"});});}// get lat and lon from city name\nasync function getCityData(city_name){try{const response=await fetch(\"http://api.openweathermap.org/geo/1.0/direct?q=\".concat(city_name,\"&limit=1&appid=\").concat(APIID));// No error in response data\nif(response.ok){// empty object\nif(Object.hasOwn(response)){console.log(\"No data: \",Object.keys(response).length);throw new Error(Object.hasOwn(response));}else{const city_data=await response.json();return city_data;}}else{throw new Error(response.status);}}catch(err){console.error(\"ERROR\",err);return err;}}//get weather data from its position(lat, lon)\nasync function getWeatherData(lat,lon){console.log(lat,lon);try{const response=await fetch(\"http://api.openweathermap.org/data/2.5/forecast/daily?lat=\".concat(lat,\"&lon=\").concat(lon,\"&appid=\").concat(APIID));// No error in response data\nif(response.ok){const weather_data=await response.json();return weather_data;}else{throw new Error(response.status);}}catch(err){console.error(\"ERROR\",err);return err;}}function getMonDay(date){let month_str=\"\";switch(date.getMonth()){case 0:month_str=\"Jan\";break;case 1:month_str=\"Feb\";break;case 2:month_str=\"Mar\";break;case 3:month_str=\"Apr\";break;case 4:month_str=\"May\";break;case 5:month_str=\"Jan\";break;case 6:month_str=\"Jul\";break;case 7:month_str=\"Aug\";break;case 8:month_str=\"Sep\";break;case 9:month_str=\"Oct\";break;case 10:month_str=\"Nov\";break;case 11:month_str=\"Dec\";break;}let date_str=month_str+\" \"+date.getDate();return date_str;}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"header\",{children:/*#__PURE__*/_jsx(\"h1\",{className:\"title\",children:\"Weather Forecast\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"location\",children:[/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"city\",children:\"Location\"}),/*#__PURE__*/_jsx(\"input\",{id:\"city\",name:\"city\",type:\"text\",value:cityName,onChange:e=>{setCityName(e.target.value);}// onKeyUp={}\n})]}),/*#__PURE__*/_jsx(\"p\",{className:\"search\",children:/*#__PURE__*/_jsx(\"input\",{type:\"button\",value:\"Go\",id:\"search_btn\",onClick:renderWeather})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"forecasts\",children:/*#__PURE__*/_jsxs(\"section\",{className:\"day_1\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"date\",id:\"date_1\",children:data.date}),/*#__PURE__*/_jsxs(\"div\",{className:\"weather\",children:[/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"img\",{id:\"weather_pic_1\",src:\"\",alt:\"\"})}),/*#__PURE__*/_jsx(\"p\",{id:\"weather_1\",children:data.main_weather})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"highest_temp\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"highest_1\",children:\"Highest\"}),/*#__PURE__*/_jsx(\"p\",{id:\"highest_1\",children:data.highest_tmp})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"lowest_temp\",children:[/*#__PURE__*/_jsx(\"label\",{for:\"lowest_1\",children:\"Lowest\"}),/*#__PURE__*/_jsx(\"p\",{className:\"lowest_tmp\",id:\"lowest_1\",children:data.lowest_tmp})]})]})})]})})]});}export default App;","map":{"version":3,"names":["useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","APIID","DEFAULT_CITY","App","cityName","setCityName","data","setData","date","weather_id","main_weather","highest_tmp","lowest_tmp","renderWeather","getCityData","then","city","getWeatherData","lat","lon","weather_data","getMonDay","Date","list","dt","weather","id","main","parseInt","temp","max","min","city_name","response","fetch","concat","ok","Object","hasOwn","console","log","keys","length","Error","city_data","json","status","err","error","month_str","getMonth","date_str","getDate","children","className","htmlFor","name","type","value","onChange","e","target","onClick","src","alt","for"],"sources":["/Users/taekoharada/Documents/myProject/weather_forcast_react/src/App.js"],"sourcesContent":["import \"./styles/styles.css\";\nimport { useState } from \"react\";\n\nconst APIID = \"431416ee6ac11ff008eca9e762cf30d3\";\nconst DEFAULT_CITY = \"Calgary\"; //later it will be determine from user's location\n\nfunction App() {\n  const [cityName, setCityName] = useState(DEFAULT_CITY);\n  const [data, setData] = useState({\n    date: \"2023-05-12\",\n    weather_id: \"400\",\n    main_weather: \"Clear\",\n    highest_tmp: \"100\",\n    lowest_tmp: \"20\",\n  });\n  async function renderWeather() {\n    getCityData(cityName)\n      .then((city) => {\n        return getWeatherData(city[0].lat, city[0].lon);\n      })\n      .then((weather_data) => {\n        setData({\n          date: getMonDay(new Date(weather_data.list[0].dt * 1000)),\n          weather_id: weather_data.list[0].weather[0].id,\n          main_weather: weather_data.list[0].weather[0].main,\n          highest_tmp: parseInt(weather_data.list[0].temp.max - 273.15) + \"邃ソ",\n          lowest_tmp: parseInt(weather_data.list[0].temp.min - 273.15) + \"邃ソ",\n        });\n      });\n  }\n\n  // get lat and lon from city name\n  async function getCityData(city_name) {\n    try {\n      const response = await fetch(\n        `http://api.openweathermap.org/geo/1.0/direct?q=${city_name}&limit=1&appid=${APIID}`\n      );\n\n      // No error in response data\n      if (response.ok) {\n        // empty object\n        if (Object.hasOwn(response)) {\n          console.log(\"No data: \", Object.keys(response).length);\n          throw new Error(Object.hasOwn(response));\n        } else {\n          const city_data = await response.json();\n\n          return city_data;\n        }\n      } else {\n        throw new Error(response.status);\n      }\n    } catch (err) {\n      console.error(\"ERROR\", err);\n      return err;\n    }\n  }\n\n  //get weather data from its position(lat, lon)\n  async function getWeatherData(lat, lon) {\n    console.log(lat, lon);\n    try {\n      const response = await fetch(\n        `http://api.openweathermap.org/data/2.5/forecast/daily?lat=${lat}&lon=${lon}&appid=${APIID}`\n      );\n      // No error in response data\n      if (response.ok) {\n        const weather_data = await response.json();\n        return weather_data;\n      } else {\n        throw new Error(response.status);\n      }\n    } catch (err) {\n      console.error(\"ERROR\", err);\n      return err;\n    }\n  }\n\n  function getMonDay(date) {\n    let month_str = \"\";\n    switch (date.getMonth()) {\n      case 0:\n        month_str = \"Jan\";\n        break;\n      case 1:\n        month_str = \"Feb\";\n        break;\n      case 2:\n        month_str = \"Mar\";\n        break;\n      case 3:\n        month_str = \"Apr\";\n        break;\n      case 4:\n        month_str = \"May\";\n        break;\n      case 5:\n        month_str = \"Jan\";\n        break;\n      case 6:\n        month_str = \"Jul\";\n        break;\n      case 7:\n        month_str = \"Aug\";\n        break;\n      case 8:\n        month_str = \"Sep\";\n        break;\n      case 9:\n        month_str = \"Oct\";\n        break;\n      case 10:\n        month_str = \"Nov\";\n        break;\n      case 11:\n        month_str = \"Dec\";\n        break;\n    }\n\n    let date_str = month_str + \" \" + date.getDate();\n    return date_str;\n  }\n\n  return (\n    <>\n      <header>\n        <h1 className=\"title\">Weather Forecast</h1>\n      </header>\n      <div className=\"container\">\n        <div className=\"location\">\n          <form>\n            <p>\n              <label htmlFor=\"city\">Location</label>\n              <input\n                id=\"city\"\n                name=\"city\"\n                type=\"text\"\n                value={cityName}\n                onChange={(e) => {\n                  setCityName(e.target.value);\n                }}\n                // onKeyUp={}\n              />\n            </p>\n            <p className=\"search\">\n              <input\n                type=\"button\"\n                value=\"Go\"\n                id=\"search_btn\"\n                onClick={renderWeather}\n              />\n            </p>\n          </form>\n\n          <div className=\"forecasts\">\n            <section className=\"day_1\">\n              <div className=\"date\" id=\"date_1\">\n                {data.date}\n              </div>\n              <div className=\"weather\">\n                <p>\n                  <img id=\"weather_pic_1\" src=\"\" alt=\"\" />\n                </p>\n                <p id=\"weather_1\">{data.main_weather}</p>\n              </div>\n              <div className=\"highest_temp\">\n                <label for=\"highest_1\">Highest</label>\n                <p id=\"highest_1\">{data.highest_tmp}</p>\n              </div>\n              <div className=\"lowest_temp\">\n                <label for=\"lowest_1\">Lowest</label>\n                <p className=\"lowest_tmp\" id=\"lowest_1\">\n                  {data.lowest_tmp}\n                </p>\n              </div>\n            </section>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}